#include <DHTesp.h>
#include <LiquidCrystal_I2C.h>
#include <PubSubClient.h>
#include "WiFi.h"
#include "HTTPClient.h"

const char* ssid = "Wokwi-GUEST";
const char* password = "";

const char* broker = "broker.hivemq.com";
const char* topic = "senai147258369";
const short port = 1883;
String frase = "";

WiFiClient wifiClient;
PubSubClient mqttClient(wifiClient); 

#define I2C_ADDR    0x27
#define LCD_COLUMNS 16
#define LCD_LINES   2

LiquidCrystal_I2C lcd(I2C_ADDR, LCD_COLUMNS, LCD_LINES);

DHTesp dhtSensor;

int ledOrange = 19;
int ledBlue = 23;

void setup()
{
  Serial.begin(115200);

  //WIFI

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.println("Conectando WiFi ...");
  }
  Serial.println("Conectado no WiFi");

  //MQTT

  mqttClient.setServer(broker, port);
  while(!mqttClient.connected())
  {
    Serial.println("Conectando ao broker ...");
    String clientID = "ESPCLIENT-";
    clientID = clientID + String(random(0xffff), HEX);
    mqttClient.connect(clientID.c_str()); 
  }
  Serial.println("Conectado ao broker");


  dhtSensor.setup(13, DHTesp::DHT22);
  pinMode(22, OUTPUT);
  pinMode(23, OUTPUT);
  pinMode(19, OUTPUT);
  pinMode(21, OUTPUT);
  lcd.init();
  lcd.backlight();
}

void loop()
{
  delay(1000);

  HTTPClient http;

  float temperatura = dhtSensor.getTemperature();
  float umidade = dhtSensor.getHumidity();
  delay(1000);

  lcd.setCursor(0, 0);
  lcd.print("Temp. :" + String(temperatura) + "CÂ°");
  lcd.setCursor(0, 1);
  lcd.print("Umidade:" + String(umidade) + "%");

  if (temperatura > 35)
  {
    digitalWrite(ledOrange, HIGH);
  }
  else
  {
    digitalWrite(ledOrange, LOW);
  }
  if (umidade > 70)
  {
    digitalWrite(ledBlue, HIGH);
  }
  else
  {
    digitalWrite(ledBlue, LOW);
  }

  String url = "https://api.thingspeak.com/update?api_key=R7YD76JB3QPC97N6&field1=";
  url += String(temperatura);
  url += "&field2=";
  url += String(umidade);
  http.begin(url);
  Serial.println("Dados enviados.");
  Serial.println("...");

  frase = "{ \"temperatura\" : " + String(temperatura) + ", \"umidade\" : " + String(umidade) + " }";
  mqttClient.publish(topic, frase.c_str());
  Serial.println("Dados enviados.");
  Serial.println("...");
  delay(1000);
}